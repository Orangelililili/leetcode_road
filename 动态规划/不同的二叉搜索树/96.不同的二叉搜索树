https://leetcode.cn/problems/unique-binary-search-trees/description/

class Solution {
public:
    int numTrees(int n) {
        vector<int> dp(n + 1, 0);
        dp[0] = 1; // 空树
        dp[1] = 1; // 只有一个节点的树

        for (int i = 2; i <= n; i++) {
            for (int j = 1; j <= i; j++) {
                dp[i] += dp[j - 1] * dp[i - j]; // 根节点为j时，左子树为j-1个节点，右子树为i-j个节点
            }//左右两棵树是独立的
        }
        return dp[n];
    }
};
//边界条件：
//dp[0] = 1：空树也是一种有效的二叉搜索树。
//dp[1] = 1：只有一个节点时，只有一种树。