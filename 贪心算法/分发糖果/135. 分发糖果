https://leetcode.cn/problems/candy/description/

class Solution {
public:
    int candy(vector<int>& ratings) {
        // 初始化每个人至少1个糖果
        vector<int> candyVec(ratings.size(), 1);

        // 从左到右遍历，保证前面的较小的获得较少糖果
        for (int i = 1; i < ratings.size(); i++) {
            if (ratings[i] > ratings[i - 1]) {
                candyVec[i] = candyVec[i - 1] + 1;
            }
        }

        // 从右到左遍历，保证后面的较小的获得较少糖果
        for (int i = ratings.size() - 2; i >= 0; i--) {
            if (ratings[i] > ratings[i + 1]) {
                candyVec[i] = max(candyVec[i], candyVec[i + 1] + 1);
            }
        }

        // 统计结果
        int result = 0;
        for (int i = 0; i < candyVec.size(); i++) {
            result += candyVec[i];
        }
        return result;
    }
};