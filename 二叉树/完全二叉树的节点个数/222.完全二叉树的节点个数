https://leetcode.cn/problems/count-complete-tree-nodes/description/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 //给的就是完全二叉树，除了最后一层全是满的
 //那就层序遍历，去计算vec中个数
class Solution {
public:
    int countNodes(TreeNode* root) {
        int result=0;
        queue<TreeNode*> que;
        if(root!=nullptr) {
            que.push(root);
            result++;
        }
        while(!que.empty()){
            int size=que.size();
            for(int i=0;i<size;i++){
                TreeNode* node=que.front();
                que.pop();
                if(node->left){
                    que.push(node->left);
                    result++;
                }
                if(node->right){
                    que.push(node->right);
                    result++;
                }
            }
        }
        return result;
    }
};