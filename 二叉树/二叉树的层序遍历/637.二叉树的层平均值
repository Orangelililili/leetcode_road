https://leetcode.cn/problems/average-of-levels-in-binary-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> result;
        //层序遍历 队列适合
        queue<TreeNode*> que;
        if(root!=nullptr){
            que.push(root);
        }
        while(!que.empty()){
            //vector<int> vec;
            int size=que.size();
            double temp=0;
            for(int i=0;i<size;i++){
                TreeNode* node=que.front();
                que.pop();
                //vec.push_back(node->val);
                temp+=node->val;
                if(node->left) que.push(node->left);
                if(node->right) que.push(node->right);
            }
            //放进去
            result.push_back(temp/size);
        }
        return result;
    }
};