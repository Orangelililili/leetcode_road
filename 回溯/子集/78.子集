https://leetcode.cn/problems/subsets/description/

class Solution {
private:
    vector<int> path;
    vector<vector<int>> result;
    void backTracking(vector<int>& nums,int startIndex){
        result.push_back(path); // 收集子集，要放在终止添加的上面，否则会漏掉自己
        if(startIndex>nums.size()){
            return;
        }
        for(int i=startIndex;i<nums.size();i++){
            path.push_back(nums[i]);
            backTracking(nums, i + 1);
            path.pop_back();
        }
    }
public:
    vector<vector<int>> subsets(vector<int>& nums) {
        path.clear();
        result.clear();
        backTracking(nums,0);
        return result;
    }
};