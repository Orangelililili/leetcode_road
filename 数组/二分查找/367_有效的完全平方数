https://leetcode.cn/problems/valid-perfect-square/description/

class Solution {
public:
    bool isPerfectSquare(int num) {
        long left=0,right=num;
        for(long i=0;i<num;++i){
            //uint还是不够大，能产生数值溢出
            while(left<=right){//左右都是闭区间
            long mid=left+(right-left)/2;
            //由于先进行了减法操作，即使 left 和 right 都接近 INT_MAX，(right - left) 的结果也不会超出 int 的范围，因此除以 2 之后的操作也不会导致溢出。
            //这种方法在处理大整数时更加安全，因为它避免了直接将两个大整数相加可能导致溢出的风险
                if(mid*mid<num){
                    //在右边
                    left=mid+1;
                }else if(mid*mid>num){
                    //在左边
                    right=mid-1;
                }else{
                    //就是mid
                    // ans=mid;
                    return true;
                }
            }
        }
        //返回
        // if(ans==-1){
        //     //没找到
        //     return false;
        // }else{
        //     return true;
        // }
        return false;
    }
};