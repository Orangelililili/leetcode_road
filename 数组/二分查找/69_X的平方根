https://leetcode.cn/problems/sqrtx/description/

class Solution {
public:
    int mySqrt(int x) {
        if (x == 0) return 0; // 处理特殊情况
        if (x == 1) return 1; // 处理特殊情况

        uint sqrx;
        for(uint i = 1; i <= x / 2; ++i) {
            if (i * i <= x && (i + 1) * (i + 1) > x) {
                sqrx = i;
                break;
            }
        }
        return sqrx;
    }
};
//官方：
class Solution {
public:
    int mySqrt(int x) {
        int l = 0, r = x, ans = -1;
        while (l <= r) {
            int mid = l + (r - l) / 2;
            if ((long long)mid * mid <= x) {
                ans = mid;
                l = mid + 1;
            } else {
                r = mid - 1;
            }
        }
        return ans;
    }
};

