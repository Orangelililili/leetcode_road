https://leetcode.cn/problems/implement-stack-using-queues/description/

class MyStack {
public:
    queue<int> que1;
    queue<int> que2; // 辅助队列，用来备份

    MyStack() {
        //构造函数
    }
    
    void push(int x) {
        que1.push(x);
    }
    
    int pop() {
        int size=que1.size();
        size--;//que1赋值给que2，只留下最后一个元素
        while(size--){
            que2.push(que1.front());
            que1.pop();
        }

        int result=que1.front();//这个就是输出元素
        que1.pop();
        que1=que2;//再把que2赋值给que1
        while(!que2.empty()){
            que2.pop();//清空que2
        }
        return result;
    }
    
    int top() {
        int size=que1.size();
        size--;//que1赋值给que2，只留下最后一个元素
        while(size--){
            que2.push(que1.front());
            que1.pop();
        }

        int result=que1.front();//这个就是输出元素
        que2.push(que1.front());//再放回去que2
        que1.pop();
        que1=que2;//再把que2赋值给que1
        while(!que2.empty()){
            que2.pop();//清空que2
        }
        return result;
    }
    
    bool empty() {
        return que1.empty();
    }
};

/**
 * Your MyStack object will be instantiated and called as such:
 * MyStack* obj = new MyStack();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->top();
 * bool param_4 = obj->empty();
 */