https://leetcode.cn/problems/valid-parentheses/description/

//括号匹配是使用栈解决的经典问题。
class Solution {
public:
    bool isValid(string s) {
        if (s.size() % 2 != 0) return false; // 如果s的长度为奇数，一定不符合要求
        stack<char> cstack;

        //遍历字符串s
        for(int i=0;i<s.size();i++){
        //有左括号就往栈里面push右括号
            if(s[i]=='(') cstack.push(')');
            else if(s[i]=='[') cstack.push(']');
            else if(s[i]=='{') cstack.push('}');
            //不匹配或者右括号多了
            else if(cstack.empty()||s[i]!=cstack.top())return false;
            else cstack.pop(); // cstack.top() 与 s[i]相等，栈弹出元素
        }
         // 第一种情况：此时我们已经遍历完了字符串，但是栈不为空，说明有相应的左括号没有右括号来匹配，所以return false，否则就return true
        return cstack.empty();
    }
};